name: youtube-shorts-5-slots

on:
  workflow_dispatch:
    inputs:
      force:
        description: "Forcer un post immédiat pour ce run"
        type: boolean
        default: false
  schedule:
    - cron: "*/5 * * * *"   # passage toutes les 5 minutes

permissions:
  contents: write

jobs:
  post:
    runs-on: ubuntu-latest
    steps:
      - name: Random jitter
        run: sleep $((RANDOM % 30))

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install \
            "google-api-python-client" "oauth2client" "progressbar2" \
            "git+https://github.com/tokland/youtube-upload.git"

      - name: Write OAuth client_secrets.json
        run: echo "${{ secrets.YT_CLIENT_SECRETS_B64_2 }}" | base64 -d > client_secrets.json

      - name: Write OAuth credentials (refresh token)
        run: echo "${{ secrets.YT_CREDENTIALS_B64_2 }}" | base64 -d > youtube_credentials.json

      - name: Force post if manual dispatch
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.force == 'true' }}
        run: |
          echo "FORCE_POST=1" >> $GITHUB_ENV
          echo "YT_PRIVACY=private" >> $GITHUB_ENV  # test en privé quand lancé à la main

      - name: Run YouTube runner
        env:
          # Google Drive (service account + dossier(s) Drive pour ce compte YouTube)
          GDRIVE_SA_JSON_B64:   ${{ secrets.GDRIVE_SA_JSON_B64 }}
          GDRIVE_FOLDER_IDS_YT: ${{ secrets.GDRIVE_FOLDER_IDS_YT_2 }}   # ex: 1AbCDe... (dossier shorts2)
          # Fichiers OAuth locaux utilisés par youtube_runner.py
          CLIENT_SECRETS_FILE: client_secrets.json
          CREDENTIALS_FILE:    youtube_credentials.json
          # Options YouTube (modifiable)
          YT_CATEGORY:         Entertainment   # Entertainment, Gaming, People & Blogs, etc.
          YT_PRIVACY:          public          # public | unlisted | private
        run: python youtube_runner.py

      - name: Cleanup
        if: always()
        run: rm -f client_secrets.json youtube_credentials.json

      - name: Commit state if changed
        run: |
          if [[ -n "$(git status --porcelain state)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add state/*.json
            git commit -m "update state/schedule"
            git push
          else
            echo "Aucun changement dans state/, rien à commit."
          fi
